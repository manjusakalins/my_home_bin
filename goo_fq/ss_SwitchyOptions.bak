{"config":"{\"firstTime\":\":]\",\"proxyMode\":\"auto\",\"autoPacScriptPath\":\":memory:\",\"upgradeShow\":1,\"proxyServer\":\"\",\"ruleListUrl\":\"https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt\",\"ruleListReload\":\"720\",\"ruleListProfileId\":\"vps_ss\",\"ruleListAutoProxy\":true,\"switchRules\":true,\"ruleListEnabled\":true,\"pacScriptData\":\"\",\"monitorProxyChanges\":true,\"preventProxyChanges\":false,\"quickSwitch\":false,\"startupProfileId\":\"\",\"confirmDeletion\":true,\"refreshTab\":false,\"lastListUpdate\":\"Wed Aug 26 2015 03:31:30 GMT+0800 (CST)\",\"rulesFirstTime\":\";]\",\"proxyConfigUrl\":\":memory:\"}","defaultRule":"{\"id\":\"defaultRule\",\"name\":\"Default Rule\",\"urlPattern\":\"\",\"patternType\":\"wildcard\",\"profileId\":\"direct\"}","profiles":"{\"vps_ss\":{\"name\":\"vps_ss\",\"proxyMode\":\"manual\",\"proxyHttp\":\"\",\"useSameProxy\":false,\"proxyHttps\":\"\",\"proxyFtp\":\"\",\"proxySocks\":\"127.0.0.1:1080\",\"socksVersion\":5,\"proxyExceptions\":\"localhost; 127.0.0.1; <local>\",\"proxyConfigUrl\":\"\",\"color\":\"blue\",\"id\":\"vps_ss\"}}","quickSwitchProfiles":"[]","rules":"{\"google\":{\"name\":\"google\",\"urlPattern\":\"google\",\"patternType\":\"regexp\",\"profileId\":\"vps_ss\",\"id\":\"google\"}}","selectedProfile":"{\"id\":\"auto\",\"name\":\"[自动切换]\",\"proxyMode\":\"auto\",\"color\":\"auto-blue\",\"isAutomaticModeProfile\":true,\"proxyConfigUrl\":\":memory:\"}"}